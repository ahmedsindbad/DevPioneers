version: '3.9'

services:
  # ========================================
  # SQL Server Database
  # ========================================
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: devpioneers-sqlserver
    hostname: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=StrongP@ssword123!
      - MSSQL_PID=Developer
      - MSSQL_TCP_PORT=1433
      - MSSQL_AGENT_ENABLED=true
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
      - ./scripts/db:/docker-entrypoint-initdb.d
    networks:
      - devpioneers-network
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P "StrongP@ssword123!" -C -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # ========================================
  # Redis Cache
  # ========================================
  redis:
    image: redis:7-alpine
    container_name: devpioneers-redis
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --requirepass RedisP@ssword123
    networks:
      - devpioneers-network
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # ========================================
  # DevPioneers API
  # ========================================
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: devpioneers-api
    hostname: api
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080;http://+:8081
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=DevPioneersDb;User Id=sa;Password=StrongP@ssword123!;TrustServerCertificate=True;MultipleActiveResultSets=true
      - ConnectionStrings__HangfireConnection=Server=sqlserver,1433;Database=DevPioneersHangfire;User Id=sa;Password=StrongP@ssword123!;TrustServerCertificate=True
      - RedisSettings__ConnectionString=redis:6379,password=RedisP@ssword123
      - JwtSettings__SecretKey=YourSuperSecretKeyForDevelopmentOnlyMustBe32CharactersLong!
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - devpioneers-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ========================================
  # Seq - Structured Logging
  # ========================================
  seq:
    image: datalust/seq:latest
    container_name: devpioneers-seq
    hostname: seq
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y
    volumes:
      - seq-data:/data
    networks:
      - devpioneers-network
    restart: unless-stopped

  # ========================================
  # Prometheus - Metrics Collection
  # ========================================
  prometheus:
    image: prom/prometheus:latest
    container_name: devpioneers-prometheus
    hostname: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - devpioneers-network
    restart: unless-stopped

  # ========================================
  # Grafana - Metrics Visualization
  # ========================================
  grafana:
    image: grafana/grafana:latest
    container_name: devpioneers-grafana
    hostname: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - devpioneers-network
    restart: unless-stopped

# ========================================
# Networks
# ========================================
networks:
  devpioneers-network:
    driver: bridge
    name: devpioneers-network

# ========================================
# Volumes
# ========================================
volumes:
  sqlserver-data:
    name: devpioneers-sqlserver-data
  redis-data:
    name: devpioneers-redis-data
  seq-data:
    name: devpioneers-seq-data
  prometheus-data:
    name: devpioneers-prometheus-data
  grafana-data:
    name: devpioneers-grafana-data